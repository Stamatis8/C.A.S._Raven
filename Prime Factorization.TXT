vector<int> prime_factorization(int a){
    vector<int> primes {};
    vector<int> factors {};
    int remainder{0};
    int quotient{0};
    int total_factors{1};
    int primecheck {1};
    for(int i {2};i<=a/2;i++){
        primecheck = 1;
        for(int j {2};j<i;j++){
            if(IsDivisor(j,i)){
                primecheck = 0;
                break;
            }
        }
        if(primecheck == 1){
            //cout<<"This was found to be a prime: "<<i<<endl;//DEBUG
            primes.push_back(i);
        }
    }
    for(int i : primes){
        remainder = a%i;
        quotient = iquot(a,i);
        if(IsPrime(quotient)&&remainder==0){
            factors.push_back(i);
            //cout<<"I am giving "<<quotient<<" to factors.\n";//DEBUG
            factors.push_back(quotient);
            }
        else if(remainder==0){
            factors.push_back(i);
            quotient = iquot(a,i);
            if(quotient%i==0){
                while(quotient%i==0){
                    factors.push_back(i);
                    quotient = iquot(quotient,i);
                }
            }
        }
        for(int i : factors){
            total_factors*=i;
           //cout<<"total_factors is: "<<total_factors<<endl;//DEBUG
        }
        if(a==total_factors)return factors;
        else total_factors = 1;
    }
    cout<<"ERROR\n";
    vector<int>stop {0};
    return stop;


}
bool IsPrime(int a){
    if(a==0||a==1)return false;
    for(int i{1};i<a;i++){
        if(a%i==0){
            if(i!=1){
                return false;
            }
        }
    }
    return true;
}
